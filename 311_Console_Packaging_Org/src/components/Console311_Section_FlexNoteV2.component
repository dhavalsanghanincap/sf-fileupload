<apex:component allowDml="true">
    <apex:attribute name="mFlexnotesList" type="Object[]" required="true" description="List of flexnotes to render."/>
    <apex:attribute name="mTheme" type="String" description="Theme for component. slds OR slds-classic supported." default="slds" />
    <apex:attribute name="mSldsPaddingDisabled" type="Boolean" description="Disable the padding from slds class" default="true" />
    <apex:attribute name="title" type="String" description="Define the title for the component" default="Request Details" />
    <apex:attribute name="showTitle" type="Boolean" description="Show/hide title for the component" default="true" />

    <style>
        .slds hr {
            width: 100%;

        }
        .slds-scope .slds-picklist .slds-dropdown, .slds-scope .slds-picklist__input  {
            width: 35rem;
        }


        .slds-padding-disabled {
            padding-left: 0 !important;
            padding-right: 0 !important;
            padding-top: 0 !important;
        }

        .dropdown-wrap-text {
            cursor: pointer;
            word-wrap: break-word;
            display:  inline-block;
            max-width: 700px; 
            min-width: 200px;
        }

        .autoExpand {
            display:  inline-block;
            max-width: 700px; 
            min-width: 200px;
        }

        input::-webkit-calendar-picker-indicator {
            display: none;
        }

        input::-slds-lookup__search-input {
            background-image: url({!URLFOR($Resource.LightningDesign, 'assets/icons/utility/down.svg')});
        background-position: 7px 7px;
        background-repeat: no-repeat;
        }

        #flexNoteContainer {
            margin-top: 45px;
        }

        #flexnotes-loading {
            dispaly: none;
        }

        .flex-note-container .fn-loading-container {
            text-align: center;
            margin: 0 auto;
        }

        .flexnote-note-panel {
            color:#A3A3A3; 
            margin-top: 5px;
            font-weight: normal; 
        }

        .required-input {
            color: red;
        }

        .image-no-border {
            border: 0 !important;
            outline: none !important;
            padding-left: 5px;
            max-height: 200px;
        }

        .list-image-container {
            cursor: pointer;
            align-items: center; 
            justify-content: center; 
        }

        .question-container {
            margin-top: 12px;
        }

        .hint-box {
            display: none;
            background-color: #2d2d2d;
            border-radius: 0px 3px 3px 3px;
            padding: 5px;
        }

        .hint-box {
            color: #ffffff;
            position: absolute;
            background: #2d2d2d;
            border: 1px solid #2d2d2d;
            margin-left: 17px;
            z-index: 9999;
            max-width: 300px;
        }
        .arrow_box:after, .arrow_box:before {
            top: 100%;
            left: 50%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .arrow_box:after {
            border-color: rgba(136, 183, 213, 0);
            border-top-color: #88b7d5;
            border-width: 30px;
            margin-left: -30px;
        }
        .arrow_box:before {
            border-color: rgba(194, 225, 245, 0);
            border-top-color: #c2e1f5;
            border-width: 36px;
            margin-left: -36px;
        }

        .slds-section-title--divider {
            margin-bottom: 10px;
        }

        .right-inner-addon {
            position: relative;

            width: 200px;
        }
        .right-inner-addon input {
            padding-right: 30px;
            width: 170px; /* 200px - 30px */
        }
        .right-inner-addon img {
            position: absolute;
            right: -10px;
            padding: 10px 12px;
            pointer-events: none;

            top: -8px;
        }

        .question-container .slds-form-element__control {
            padding-right: 0;
        }

        .tooltip-custom {
            position: relative;
            display: inline-block;
            border-bottom: 1px dotted black;
        }

        .tooltip-custom .tooltiptext {
            visibility: hidden;
            width: 200px;
            background-color: #2d2d2d;
            color: #fff;
            text-align: center;
            border-radius: 3px;
            padding: 5px 0;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 1s;
            font-family: "Salesforce Sans", Arial, sans-serif;
        }

        .tooltip-custom .tooltiptext::after {
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            margin-left: -5px;
            border-width: 5px;
            border-style: solid;
            border-color: #2d2d2d transparent transparent transparent;
        }

        .tooltip-custom:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
    </style>

    <apex:outputpanel id="flexNoteContainer" layout="block" styleclass="{!mTheme} {! IF(mSldsPaddingDisabled, 'slds-padding-disabled', '') } flex-note-container slds-container">
        <apex:outputpanel styleclass="stvQuestionContainer slds-grid slds-wrap" rendered="{!mFlexnotesList.size > 0}" layout="block">  
            <apex:outputPanel rendered="{!showTitle}" layout="none"> 
                <!--<h3 class="slds-section-title--divider slds-size--1-of-1">{!Title}</h3>-->
                <h4 class="slds-text-title--caps slds-size--1-of-1" id="treeheading" style="line-height: 22px;">
                    <span class="slds-icon_container">
                        <img src="{!URLFOR($Resource.LightningDesign, 'assets/icons/utility/note.svg')}" aria-hidden="true" class="slds-icon slds-icon--small svg" />
                    </span>
                    {!Title}
                </h4>
            </apex:outputPanel>

            <apex:variable var="IndexValue" value="{!0}" />

            <div id="flexNoteForm" class="slds-grid slds-wrap slds-col slds-size--1-of-1">

                <apex:repeat value="{!mFlexnotesList}" var="flexQuestion"> 

                    <div class="question-container slds-col slds-size--1-of-1" data-order="{!flexQuestion['QuestionOrderRank']}">

                        <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']==true}">
                            <label class="slds-form-element__label">
                                <span class="required-input">*</span>
                                <apex:outputText value="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Question__c']}" escape="false" />
                            </label>


                            <apex:outputPanel layout="none" rendered="{!!ISBLANK(flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c'])}">
                                <i class="fa fa-info-circle hint-hover-icon tooltip-custom" aria-hidden="true" data-hint="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c']}">
                                    <span class="tooltiptext">
                                        {!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c']}
                                    </span>
                                </i>
                            </apex:outputPanel>
                        </apex:outputpanel>


                        <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']==false}">
                            <apex:outputpanel layout="block" styleClass="flexnote-note-panel" rendered="{!IF(flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c'] == null,'true','false')}">
                                <div class="slds-notify slds-notify--alert slds-theme--alert-texture" role="alert">
                                    <span class="slds-assistive-text">Info</span>
                                    <h2>
                                        <apex:outputText value="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Question__c']}" escape="false" />
                                    </h2>
                                </div>
                            </apex:outputpanel>

                            <apex:outputpanel layout="block" rendered="{!IF(flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c'] !=null,'true','false')}">
                                <label class="slds-form-element__label"><apex:outputText value="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Question__c']}" escape="false" /></label>

                                <apex:outputPanel layout="none" rendered="{!!ISBLANK(flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c'])}">
                                    <i class="fa fa-info-circle hint-hover-icon tooltip-custom" aria-hidden="true" data-hint="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c']}">
                                        <span class="tooltiptext">
                                            {!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Hint_Text__c']}
                                        </span>
                                    </i>
                                </apex:outputPanel>
                            </apex:outputpanel>
                        </apex:outputpanel>


                        <div class="answer-container">
                            <div class="{!IF(flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']==true,'requiredInput', '')}">
                                <div class="{!IF(flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']==true,'requiredBlock', '')}">

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Picklist'}" id="picklistOPTPanelid" layout="block">
                                        <div id="DropDown-{!IndexValue}" class="slds-picklist slds-dropdown-trigger slds-dropdown-trigger--click slds-size--1-of-1" >
                                            <div class="slds-form-element">
                                                <div class="slds-form-element__control slds-input-has-icon slds-input-has-icon--right slds-picklist__input ">
                                                    <apex:image url="{!URLFOR($Resource.LightningDesign, 'assets/icons/utility/down.svg')}" styleclass="svg slds-input__icon slds-icon-text-default" />
                                                    <input
                                                           class="slds-lookup__search-input slds-input picklist-input"
                                                           name="serviceQuestions-picklist-{!IndexValue}"
                                                           id="serviceQuestions-picklist-{!IndexValue}"
                                                           value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                           type="text"
                                                           onblur="checkValue({!IndexValue})"
                                                           onkeyup="filterList({!IndexValue})"
                                                           placeholder="{!IF(flexQuestion['sq']['Incap311__Answer__c'] != null && flexQuestion['sq']['Incap311__Answer__c'] != '', flexQuestion['sq']['Incap311__Answer__c'], 'Select an Option')}"
                                                           data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                                           data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                           data-service-type-version-question-name="{!flexQuestion['questionCode']}"
                                                           data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"
                                                           aria-autocomplete="list"
                                                           />
                                                </div>



                                            </div>
                                            <div class="slds-dropdown slds-dropdown--left slds-dropdown--length-5"  role="listbox">
                                                <ul id="option-list-{!IndexValue}" class="slds-dropdown__list" role="group" aria-label="Recently Viewed">

                                                    <apex:repeat value="{!flexQuestion['PicklistOptions']}" var="option">
                                                        <li href="#" class="slds-dropdown__item slds-has-icon--left slds-grid" style="align-items: center;" onkeypress="keySelected(event,'{!JSENCODE(option.value)}',{!IndexValue},{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']});" onclick="selected('{!JSENCODE(option.value)}',{!IndexValue},{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']})">
                                                            <apex:outputPanel layout="block" rendered="{!option.img != null}" styleClass="slds-col slds-size--1-of-3 list-image-container">
                                                                <img src="{!option.img}" alt="" class="image-no-border"/>
                                                            </apex:outputPanel>

                                                            <span class="slds-lookup__item-action slds-lookup__item-action--label" role="option" tabindex="0" id="listbox-option-286">
                                                                <span class="dropdown-wrap-text">
                                                                    {!option.value}
                                                                </span>
                                                            </span>
                                                        </li>
                                                    </apex:repeat>

                                                </ul>
                                            </div>
                                        </div>


                                        <script>

                                        </script>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Text' || flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Number'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" styleclass="slds-form-element__control" layout="block">
                                                <input
                                                       type="text"
                                                       name="serviceQuestions-text-{!IndexValue}"
                                                       class="slds-input"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       disabled="true"/>
                                            </apex:outputpanel>

                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] != true}" styleclass="slds-form-element__control" layout="block">
                                                <input
                                                       type="text"
                                                       name="serviceQuestions-text-{!IndexValue}"
                                                       class="slds-input"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}" 
                                                       data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                       data-service-type-version-question-name="{!flexQuestion['questionCode']}"
                                                       data-datatype="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']}" 
                                                       data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"
                                                       />
                                                <!-- data-isScheduleType="{!flexQuestion['stvQuestion']['Incap311__Service_Type_Version__r']['Incap311__Service_Type__r']['Incap311__Is_Bulk_Type__c']}" -->
                                            </apex:outputpanel>
                                        </div>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Informational'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel styleclass="slds-form-element__control" layout="block">
                                                <apex:outputText value="{!flexQuestion['sq']['Incap311__Answer__c']}"/>
                                            </apex:outputpanel>
                                        </div>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Boolean (checkbox)'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" styleclass="slds-form-element__control" layout="block">
                                                <input
                                                       type="checkbox"
                                                       name="serviceQuestions-checkbox-{!IndexValue}"
                                                       class="slds-input"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       disabled="true"/>
                                            </apex:outputpanel>

                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] != true}" styleclass="slds-form-element__control" layout="block">
                                                <input name="serviceQuestions-checkbox-{!IndexValue}" 
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       type="checkbox"
                                                       id="serviceQuestions-checkbox-{!IndexValue}"
                                                       data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                                       data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                       data-service-type-version-question-name="{!flexQuestion['questionCode']}"
                                                       data-datatype="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']}"
                                                       data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"
                                                       />
                                            </apex:outputpanel>
                                            <script language="javascript">
                                                if({!flexQuestion['sq']['Incap311__Answer__c']} == true){
                                                    document.getElementById("serviceQuestions-checkbox-{!IndexValue}").checked = true;
                                                }
                                            </script>
                                        </div>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Date/Time'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" styleclass="slds-form-element__control" layout="block">
                                                <input
                                                       type="datetime-local"
                                                       name="serviceQuestions-datetime-{!IndexValue}"
                                                       class="slds-input"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       disabled="true"/>
                                            </apex:outputpanel>

                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] != true}" styleclass="slds-form-element__control slds-input-has-icon slds-input-has-icon--left" layout="block">
                                                <apex:image url="{!URLFOR($Resource.LightningDesign, 'assets/icons/utility/event.svg')}" styleclass="svg slds-input__icon slds-icon-text-default" />
                                                <input name="serviceQuestions-datetime-{!IndexValue}"
                                                       type="text"
                                                       class="slds-input dateTimeAnswerFieldId_{!IndexValue}"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       onfocus="$('.dateTimeAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY hh:mm a', onChange: onChangeDatetimeFunc});"
                                                       onclick="$('.dateTimeAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY hh:mm a', onChange: onChangeDatetimeFunc});"
                                                       data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                                       data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                       data-service-type-version-question-name="{!flexQuestion['questionCode']}" 
                                                       data-datatype="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']}" 
                                                       data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"/>
                                            </apex:outputpanel>
                                        </div>
                                        <span>
                                            <script>
                                                var onChangeDatetimeFunc = function(datetime) {
                                                    //console.log(datetime);  
                                                    if (datetime != null) {
                                                        var d = new Date();
                                                        datetime.selectedFullDate.hour(d.getHours());
                                                        datetime.selectedFullDate.minute(d.getMinutes());
                                                        datetime.selectedFullDate.second(d.getSeconds());
                                                        $(datetime.$el[0]).val(datetime.selectedFullDate.format('MM/DD/YYYY hh:mm a'));
                                                    }
                                                };                  

                                                $('.dateTimeAnswerFieldId_{!IndexValue}').on('focus', function() {
                                                    $('.dateTimeAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY hh:mm a'});
                                                });
                                            </script>
                                        </span>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='Date'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" styleclass="slds-form-element__control" layout="block">
                                                <input
                                                       type="text"
                                                       name="serviceQuestions-date-{!IndexValue}"
                                                       class="slds-input"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       disabled="true"/>
                                            </apex:outputpanel>

                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] != true}" styleclass="slds-form-element__control slds-input-has-icon slds-input-has-icon--left" layout="block">
                                                <apex:image url="{!URLFOR($Resource.LightningDesign, 'assets/icons/utility/event.svg')}" styleclass="svg slds-input__icon slds-icon-text-default" />
                                                <input name="serviceQuestions-date-{!IndexValue}"
                                                       tabindex="0"
                                                       type="text"
                                                       class="slds-input dateAnswerFieldId_{!IndexValue}"
                                                       value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                       onfocus="$('.dateAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY'});"
                                                       onclick="$('.dateAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY'});"
                                                       data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                                       data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                       data-service-type-version-question-name="{!flexQuestion['questionCode']}" 
                                                       data-datatype="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']}"
                                                       data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"/>
                                            </apex:outputpanel>
                                        </div>

                                        <span>
                                            <script>
                                                $('.dateAnswerFieldId_{!IndexValue}').on('focus', function() {
                                                    $('.dateAnswerFieldId_{!IndexValue}').datepicker({format: 'MM/DD/YYYY'});
                                                });
                                                if (window['convertSVGtoInlineSVG']) {
                                                    convertSVGtoInlineSVG();
                                                }
                                            </script>
                                        </span>
                                    </apex:outputpanel>

                                    <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='TextArea'}">
                                        <div class="slds-form-element">
                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" styleclass="slds-form-element__control" layout="block">
                                                <textarea name="serviceQuestions-textarea-{!IndexValue}" class="slds-textarea" value="{!flexQuestion['sq']['Incap311__Answer__c']}" style="height:100px;width:200px" disabled="true" data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" data-service-type-version-question-name="{!flexQuestion['questionCode']}"></textarea>
                                            </apex:outputpanel>

                                            <apex:outputpanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] != true}" styleclass="slds-form-element__control" layout="block">
                                                <textarea
                                                          name="serviceQuestions-textarea-{!IndexValue}"
                                                          class="slds-textarea"
                                                          value="{!flexQuestion['sq']['Incap311__Answer__c']}"
                                                          data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                                          data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}" 
                                                          data-service-type-version-question-name="{!flexQuestion['questionCode']}"
                                                          data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}">{!flexQuestion['sq']['Incap311__Answer__c']}</textarea>
                                            </apex:outputpanel>
                                        </div>
                                    </apex:outputpanel> 

                                    <apex:outputpanel styleclass="multi-picklist-container" rendered="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']=='MultiPicklist'}">
                                        <apex:variable var="checkCounter" value="{!0}"/>

                                        <ul style="list-style-type: none; padding: 0px;" data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}" class="slds-grid slds-wrap">
                                            <apex:repeat value="{!flexQuestion['PicklistOptions']}" var="picklistItem">
                                                <li style="margin-left: -2px;padding:02px" class="slds-col slds-size--1-of-1 slds-medium-size--1-of-2 slds-large-size--1-of-3">
                                                    <div class="slds-row-select">
                                                        <label id="checkbox-label-{!checkCounter}" class="slds-checkbox" for="select-row-{!flexQuestion['stvQuestion']['Id']}-{!checkCounter}">

                                                            <apex:outputPanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] == true}" layout="none">
                                                                <input name="" type="checkbox" id="select-row-{!flexQuestion['stvQuestion']['Id']}-{!checkCounter}" value="{!picklistItem.value}" data-parsley-excluded="true" disabled="true" />
                                                            </apex:outputPanel>

                                                            <apex:outputPanel rendered="{!flexQuestion['stvQuestion']['Incap311__Is_Read_Only__c'] 
                                                                                        != true}" layout="none">
                                                                <input name="" type="checkbox" id="select-row-{!flexQuestion['stvQuestion']['Id']}-{!checkCounter}" value="{!picklistItem.value}" data-parsley-excluded="true"/>
                                                            </apex:outputPanel>


                                                            <span class="slds-checkbox--faux" data-value="{!picklistItem.value}"></span>

                                                            <span class="slds-form-element__label slds-assistive-text">{!picklistItem.value}</span>

                                                            <script>
                                                                if ({! picklistItem.isSelected }) {
                                                                    $('#select-row-{!flexQuestion['stvQuestion']['Id']}-{!checkCounter}').attr('checked', 'checked');
                                                                }
                                                            </script>
                                                        </label>

                                                        <label class="slds-form-element__label" for="checkbox-label-{!flexQuestion['stvQuestion']['Id']}-{!checkCounter}">{!picklistItem.value}</label>

                                                        <apex:outputPanel layout="block" rendered="{!picklistItem.img != null}" styleClass="list-image-container" style="display: inline;">
                                                            <img src="{!picklistItem.img}" alt="" class="image-no-border"/>
                                                        </apex:outputPanel>
                                                    </div>
                                                </li>
                                                <apex:variable var="checkCounter" value="{!checkCounter + 1}"/>
                                            </apex:repeat>
                                        </ul> 
                                        <input
                                               class="hiddenInput multi-picklist serviceQuestions-multi-picklist-{!IndexValue}"
                                               value="{! flexQuestion['SelectedItemsJSON'] }"
                                               name="serviceQuestions-multilist-{!IndexValue}"
                                               type="hidden"
                                               aria-hidden="true"
                                               data-parsley-required="{!flexQuestion['stvQuestion']['Incap311__Is_Required_Question__c']}"
                                               data-service-type-version-question-id="{!flexQuestion['stvQuestion']['Id']}"
                                               data-datatype="{!flexQuestion['stvQuestion']['Incap311__Question__r']['Incap311__Data_Type__c']}" 
                                               data-service-type-version-question-name="{!flexQuestion['questionCode']}" 
                                               data-is-controlling="{!flexQuestion['stvQuestion']['Incap311__Is_Controlling__c']}"/>
                                    </apex:outputpanel>
                                </div>
                            </div>
                        </div>

                    </div>
                    <apex:variable var="IndexValue" value="{!IndexValue + 1}"/>
                </apex:repeat>
            </div>
        </apex:outputpanel>
    </apex:outputpanel>
    <script>

     

    
        var toggleDropDown = function toggleDropDown(indexValue) {
            removeAllDropDowns();

            var divThing = document.getElementById('DropDown-'+indexValue);
            if(divThing != null) {
                divThing.classList.add('slds-is-open');
            }
        }

        var removeDropDown = function removeDropDown(indexValue) {
            var divThing = document.getElementById('DropDown-'+indexValue);
            if(divThing != null) {
                divThing.classList.remove('slds-is-open');
                //checkValue(i);
            }
        }

        var keySelected = function keySelected(event, valueSelected,indexValue, isControlling) {
            event = event || window.event;
             if(event == null || event.keyCode == 13){
                selected(valueSelected,indexValue,isControlling)
             }
        }

        var selected = function selected(valueSelected,indexValue,isControlling) {
            var divThing = document.getElementById('serviceQuestions-picklist-'+indexValue);
            divThing.value = valueSelected;
            removeDropDown(indexValue);
            if(isControlling != null && isControlling == true){
                refreshFlexNotes();
            }

        }

        var filterList = function filterList(indexValue) {
            //make sure the dropdown is open
            var divThing = document.getElementById('DropDown-'+indexValue);
            removeAllDropDowns();
            divThing.classList.add('slds-is-open');


            input = document.getElementById("serviceQuestions-picklist-"+indexValue);
            filter = input.value.toUpperCase().trim();
            ul = document.getElementById("option-list-"+indexValue);
            li = ul.getElementsByTagName("li");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName("span")[0].getElementsByTagName("span")[0];
                if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";

                }
            }
        }

        var checkValue = function checkValue(indexValue) {
            //console.log(indexValue);
            var divThing = escape(document.getElementById('serviceQuestions-picklist-'+indexValue));
            //console.log(divThing);
            if(divThing != null){
                //console.log(divThing);
                filter = divThing.value.toUpperCase();
                ul = document.getElementById("option-list-"+indexValue);
                //console.log(ul);
                li = ul.getElementsByTagName("li");
                //console.log(li);
                var noMatch = true;
                for (i = 0; i < li.length; i++) {
                    a = li[i].getElementsByTagName("span")[0].getElementsByTagName("span")[0];
                    if (escape(a.innerHTML.toUpperCase().trim()) === filter) {
                        noMatch = false;
                        //console.log('MATCH FOUND');
                    } 
                    //console.log('MATCH Not FOUND');
                }
                if(noMatch){
                    divThing.value = '';
                }
                //console.log('Filter');
            }
        }

        var test = false;

        var unhidePicklistVals = function unhidePicklistVals(indexValue){
            filter = '';
            ul = document.getElementById("option-list-"+indexValue);
            if(ul != null){
                //console.log(ul);
                li = ul.getElementsByTagName("li");
                for (var i = 0; i < li.length; i++) {
                    a = li[i].getElementsByTagName("span")[0].getElementsByTagName("span")[0];
                    if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        li[i].style.display = "";
                    } else {
                        li[i].style.display = "none";

                    }
                }
            }
        };

        //Used for clicking in and out of dropdowns
        document.addEventListener('click', function(event) {
            var specifiedElement = document.getElementsByClassName("slds-dropdown-trigger");
            for (i = 0; i < specifiedElement.length; i++) {

                // if we've clicked on the INPUT area of a drop down
                // target AND its the one we've clicked inside, open it.
                // close all other
                var isClickInside = specifiedElement[i].contains(event.target) && (event.target.classList.contains('slds-lookup__search-input') || event.target.classList.contains('svg') ||(event.target.tagName == 'path') );
                if (isClickInside) {
                    specifiedElement[i].classList.add('slds-is-open');
                } else {
                    specifiedElement[i].classList.remove('slds-is-open');

                }
            }

        });


        //Used for Tabing in and out of dropdowns
        document.addEventListener('keydown', function(event) {
            var keyCode = event.keyCode || event.which; 
            if (keyCode == 9) {
                var specifiedElement = document.getElementsByClassName("slds-dropdown-trigger");
                var lengthx = specifiedElement.length;
                for (var i = 0; i < lengthx; i++) {
                    console.log('for loop '+i);
                    var isClickInside = specifiedElement[i].contains(event.target);
                    if (isClickInside) {
                        specifiedElement[i].classList.add('slds-is-open');
                    } else {
                        specifiedElement[i].classList.remove('slds-is-open');
                        console.log('unhide');
                        unhidePicklistVals(i);
                    }
                }
            }
        });

        var removeAllDropDowns = function removeAllDropDowns(){
            var specifiedElement = document.getElementsByClassName("slds-dropdown-trigger");
            for (i = 0; i < specifiedElement.length; i++) {
                specifiedElement[i].classList.remove('slds-is-open');
                //checkValue(i);
            }
        }

        // $.aljsInit({
        //   assetsLocation: '{!URLFOR($Resource.LightningDesign)}',
        // scoped: false
        //});

        if (window['convertSVGtoInlineSVG']) {
            convertSVGtoInlineSVG();
        }
    </script>

    <script>
        //expand picklist to size of list values
        /*var minSize = 30;
        var specifiedElement = document.getElementsByClassName("slds-dropdown-trigger");
        var numberOfInputs = specifiedElement.length;
        var placeHolderText = 'Select an Option';
        for (var xLen = 0; xLen < numberOfInputs; xLen++) {
            li = specifiedElement[xLen].getElementsByTagName("li");
            inputs = specifiedElement[xLen].getElementsByTagName("input");
            uls = specifiedElement[xLen].getElementsByTagName("ul");
            dropdown = specifiedElement[xLen].getElementsByClassName('slds-dropdown');
            var maxLength = placeHolderText.length*13;
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName("span")[0].getElementsByTagName("span")[0];
                if(maxLength < (a.innerHTML.trim().length*13)){
                    //li[i].style.width = (a.innerHTML.length*13)+'px';
                    maxLength = a.innerHTML.trim().length*13;
                    //console.log(maxLength);
                    //console.log(a.innerHTML);
                    //console.log(a.innerHTML.length);

                    a.style.width = maxLength+'px';
                    li[i].style.width = maxLength+'px';

                }

            }
            specifiedElement[xLen].style.width = maxLength+'px';
            inputs[0].style.width = maxLength+'px';
            uls[0].style.width = maxLength+'px';
            dropdown[0].style.width  = maxLength+'px';
            dropdown[0].style.maxWidth  = maxLength+'px';


        }*/

        


        if(!window.printStackTrace) {
            window.printStackTrace = function() {
                return '???';
            }
        }

         
    </script>



</apex:component>